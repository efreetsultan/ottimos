service: ottimosServerless
frameworkVersion: '3'

custom:
  googleOAuthAuthorizerName: googleOAuthAuthorizer

provider:
  name: aws
  runtime: nodejs18.x
  region: eu-west-2
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:*
          Resource:
            - Fn::Sub: 'arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/Customer'
            - Fn::Sub: 'arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/Order'
            - Fn::Sub: 'arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/MenuItem'
            - Fn::Sub: 'arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/Allergen'
            - Fn::Sub: 'arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/Ingredients'
resources:
  - ${file(./dynamoDb.yml)}
  - ${file(./cognito.yml)}
functions:
  - ${file(./customerController.yml)}
  - ${file(./orderController.yml)}
  - ${file(./menuItemController.yml)}
  - ${file(./ingredientsController.yml)}
  - ${file(./allergenController.yml)}
  - ${file(./authorizer.yml)}

outputs:
  GoogleOAuthAuthorizerArn:
    Value:
      Fn::GetAtt:
        - Authentication
        - Arn
    Export:
      Name: ${self:service}-${self:provider.stage}-GoogleOAuthAuthorizerArn